language: python
cache: pip
python:
  - 2.7
  - 3.6
install:
  - pip install flake8
before_script:
  # stop the build if there are Python syntax errors, PEP8 violations, undefined names
  - flake8 . --count --select=E,F821,F822,F823 --max-line-length=127 --show-source --statistics
  # exit-zero treats all errors as warnings.  GitHub editor is 127 chars wide
  - flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
script:
  - true  # add other tests here

matrix:
  include:
    - language: node_js
      python:
      node_js:
        - 8
      install:
      ## Data model validator
        - npm install -C ./validator
        - sudo apt-get remove -y docker docker-engine docker.io
        - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get -qq update
        - sudo apt-get install -y docker-ce
        - docker run --name mongodb -d mongo:3.4
        - docker run -d --name orion1 --link mongodb:mongodb -p 1026:1026 fiware/orion -dbhost mongodb
      before_script:
        - npm run lint -C ./validator
        - node ./validator/validate.js -i common-schema.json -i geometry-schema.json -i specs/Weather/weather-schema.json -i specs/Alert/alert-schema.json -p specs -c true
      script:
        - true

notifications:
  on_success: change
  on_failure: always
  webhooks:
    on_success: always
    on_failure: never
    urls:
      secure: oVMpPbut0BsU+31eZy1qDjucZT2R7R712SIIJC6SW3n1Nip7Jl+QDz1BGMFTePcv4aiW6YQTk3kVcdTKnVx7RWYorVZ769J/Ecwk4V1SU2WYO+Ms4QxvdNbzdByIyGHXk5hshT9EAWMgOM9tWGIMY/9UsDsrK+hIsiVdf9bQGoUP9SJ11kutY8uZpvf7H51w46UYa5Qvylfp4BmXIk3jJfWz8DvS34h0EC4xagNNsT8Kke2YILzSg1+cqDeMAQP2OOYlKYPKwhc/e5x5zH7BQzksLI0nE0BaOu4Nq8ecWXVdJRZtkxEiJDKKsz6O/A+Q9bAtuAdv3SqZTPcHS9V+64jvFRKJO3et8Z1nEm82ZWzke901NLHhlEw/3t8bt7bzDz+teUnZIy9qtps0Q+QJg3OrA8BNKDIzzZHSO4l4mXysERozG6VN/7cI1tqMek/IwgfTxNJYoX68sW/QGv3oSEZmJmX5J/4LcArT8cmI5zHen3eAvNZ1TnhOIHBn+dIRgpbYW/VICTl09JKVLmlrkusVmsBVDm55erxaUAR97cND5FyZbtXRRmg0J0y6K0YlQ1SVucS71uaOWiJc3tlE2b89/UOrfjwy/fuOPdTlaJq1z8Zgb3O6xuxPiJz1SE1gRdG1iHPFQtulgnBBwfBY7/SED6oLQLkpCNtJuc2tJuQ=
