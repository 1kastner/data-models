language: python
cache: pip
python:
  - 2.7
  - 3.6
install:
  - pip install flake8
before_script:
  # stop the build if there are Python syntax errors, PEP8 violations, undefined names
  - flake8 . --count --select=E,F821,F822,F823 --max-line-length=127 --show-source --statistics
  # exit-zero treats all errors as warnings.  GitHub editor is 127 chars wide
  - flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
script:
  - true  # add other tests here

matrix:
  include:
    - language: node_js
      python:
      node_js:
        - 8
      install:
      ## Data model validator
        - npm install -C ./validator
        - sudo apt-get remove -y docker docker-engine docker.io
        - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get -qq update
        - sudo apt-get install -y docker-ce
        - docker run --name mongodb -d mongo:3.4
        - docker run -d --name orion1 --link mongodb:mongodb -p 1026:1026 fiware/orion -dbhost mongodb
      before_script:
        - npm run lint -C ./validator
        - node ./validator/validate.js -i common-schema.json -i geometry-schema.json -i specs/Weather/weather-schema.json -i specs/Alert/alert-schema.json -p specs -c true
      script:
        - true

notifications:
  on_success: change
  on_failure: always
  webhooks:
    on_success: always
    on_failure: never
    urls:
      secure: ePst22ZyFX1ak7/GfpvPtdDw8fkdJN/dAQcPcOFFIrCPu5ciIsmhsml2lAFEtj4MHRHYTYlW2+rbWFgO7ByiZmQHmo5lLdQhzpgBRVVB5Rp6YYBJ7paXU6Kr5kQ3CtQ9FeZcMCkI/GaMBeV3ECVYDzfpyAbPOoe9YimoHvhV5/3BYMPJZULJEY6ZPgg06MQY0Gn0zy880ULfkbLGK5WfSCFa7ovbxvfzgGhB9WV7ddJ/mpRo0d73Yt2NQbboM2TB1PrVEt7XvakqY2++u+VymVQQQ1b2Xb6jWcFeAI9rkxGiw1PrkivnlYbvzw5U2U9M8mtxNKcqIN1LS2Kbz23u10RuTVX8rTsEOurFqr3GDVkqP8QVF+QfwQxHlLTCbYYshzKoofL4H28pNFymmnwh8U1KxiF7dZ2ubTJG6No+uevjWZ+XGSsYt7F0bH331E2tqamJenEDOmbYOgWi9eqIM4w/XoRNUWwnRDZA/Yrzn34TqHL1N9QrkOF+BGpiWrNMvUFDVY6RuvcBTj1dZcgUZU33RR/1vEQt2A7HYaAVjgxYXLtesfWHAjuPMNlbIWFN6T2DKnPvaTUGYYC8sbpFRviRoptQ8ll/txmz6N4T5p1RHGfxYXsMreBtZgUmNduzld6RXEpyr7HnXX9Dh8GOs91qxURnOl3eZM+YI7yT0VU=
